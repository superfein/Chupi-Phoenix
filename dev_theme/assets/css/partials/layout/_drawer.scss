
// _drawer.scss

.drawer {
  position: fixed;
  display: grid;
  grid-template-columns: 100%;
  //grid-template-rows: minmax(min-content, max-content) auto minmax(min-content, max-content); // auto = main section
  grid-template-rows: minmax(min-content, max-content) 1fr minmax(min-content, max-content); // 1fr = main section
  grid-gap: 0px;
  top: 0;
  right: 0;
  width: 100%;
  max-width: 450px;
  height: 100%;
  height: 100vh;
  padding: 15px;
  background-color: $white;
  z-index: 12;
  opacity: 1;
  pointer-events: none;
  @include transform(translateX(100%));
  @include transition(transform 0.3s $ease_out_quint 0s);
  .drawer-back {
    position: absolute;
    top: 0;
    right: 100%;
    width: 2000px;
    width: 100vw;
    height: 100%;
    //background-color: rgba(60, 60, 60, 0.5);
    background-color: rgba($grey_dark, 0.5);
    opacity: 0;
    @include transition(opacity 0.4s $ease_out_quint 0s);
  }
  .drawer-header {
    position: relative;
    grid-row: 1 / span 1;
    align-self: start;
    h2 {
      font-size: 22px;
      //text-transform: uppercase;
      display: block;
      padding-right: 50px;
      margin-bottom: 5px;
      padding-bottom: 5px;
      border-bottom: 1px solid $grey_light;
    }
    > p {
      font-size: 14px;
      &:last-of-type {
        margin-bottom: 10px;
      }
    }
    .close-btn {
      position: absolute;
      top: -10px;
      right: -10px;
      width: 40px;
      height: 40px;
      &:before, &:after {
        content: "";
        position: absolute;
        width: 18px;
        height: 0.05em;
        top: 50%;
        left: 50%;
        background-color: $grey;
        @include transition(all 0.2s $ease);
      }
      &:before {
        @include transform(translate(-50%, -50%) rotateZ(135deg));
      }
      &:after {
        @include transform(translate(-50%, -50%) rotateZ(45deg));
      }
      &:hover {
        &:before, &:after {
          background-color: $grey_dark;
        }
      }
    }
  } // end .drawer-header
  .drawer-main {
    grid-row: 2 / span 1;
    overflow-x: hidden;
    overflow-y: auto;
    -webkit-overflow-scrolling: touch;
    scroll-behaviour: smooth;
    //padding: 10px 0;
  } // end .drawer-main
  .drawer-footer {
    grid-row: 3 / span 1;
    align-self: end;
  } // end .drawer-footer
  &.active {
    opacity: 1;
    pointer-events: auto;
    @include transform(translateX(0%));
    @include transition(transform 0.4s $ease_out_quint 0s);
    .drawer-back {
      opacity: 1;
      @include transition(opacity 0.4s $ease_out_quint 0s);
    }
  }
} // end .drawer












//----------- Media queries from mobile up (xs, xs_landscape, s, m, ml, l, xl, xxl) -----------//


@include mquery(s) {

  // .drawer {
  //   opacity: 0;
  //   @include transition(transform 0.4s $ease_out_quint 0s, opacity 0.4s $ease_out_quint 0s);
  //   &.active {
  //     @include transition(transform 0.4s $ease_out_quint 0s, opacity 0.4s $ease_out_quint 0s);
  //     .drawer-back {
  //       opacity: 1;
  //     }
  //   }
  // } // end .drawer

} // end media-query small







@include mquery(m) {

} // end media-query medium







@include mquery(ml) {

  .drawer {
    .drawer-header {
      h2 {
        font-size: 26px;
        padding-bottom: 10px;
      }
      > p {
        &:last-of-type {
          margin-bottom: 10px;
        }
      }
      .close-btn {
        top: -5px;
      }
    }
  } // end .drawer

} // end media-query medium-large









@include mquery(l) {

} // end media-query large



@include mquery(xl) {

} // end media-query extra-large



@include mquery(xxl) {

} // end media-query extra-extra-large
